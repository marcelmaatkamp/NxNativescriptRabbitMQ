"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
/**
 * This is organized in this module just for good housekeeping
 * However it is provided via the CoreModule to ensure it's
 * a singleton the entire app can use.
 * If your module service is *only* used in this module
 * you can have the service provided by this module.
 * In this case however, we want this service to be a true singleton
 * which can be injected into any component/service anywhere and
 * it will be the same instance therefore this is provided by the CoreModule.
 */
var ItemService = /** @class */ (function () {
    function ItemService() {
        this.items = new Array({ id: 1, name: 'Ter Stegen', role: 'Goalkeeper' }, { id: 3, name: 'Piqué', role: 'Defender' }, { id: 4, name: 'I. Rakitic', role: 'Midfielder' }, { id: 5, name: 'Sergio', role: 'Midfielder' }, { id: 6, name: 'Denis Suárez', role: 'Midfielder' }, { id: 7, name: 'Arda', role: 'Midfielder' }, { id: 8, name: 'A. Iniesta', role: 'Midfielder' }, { id: 9, name: 'Suárez', role: 'Forward' }, { id: 10, name: 'Messi', role: 'Forward' }, { id: 11, name: 'Neymar', role: 'Forward' }, { id: 12, name: 'Rafinha', role: 'Midfielder' }, { id: 13, name: 'Cillessen', role: 'Goalkeeper' }, { id: 14, name: 'Mascherano', role: 'Defender' }, { id: 17, name: 'Paco Alcácer', role: 'Forward' }, { id: 18, name: 'Jordi Alba', role: 'Defender' }, { id: 19, name: 'Digne', role: 'Defender' }, { id: 20, name: 'Sergi Roberto', role: 'Midfielder' }, { id: 21, name: 'André Gomes', role: 'Midfielder' }, { id: 22, name: 'Aleix Vidal', role: 'Midfielder' }, { id: 23, name: 'Umtiti', role: 'Defender' }, { id: 24, name: 'Mathieu', role: 'Defender' }, { id: 25, name: 'Masip', role: 'Goalkeeper' });
    }
    ItemService.prototype.getItems = function () {
        return this.items;
    };
    ItemService.prototype.getItem = function (id) {
        return this.items.filter(function (item) { return item.id === id; })[0];
    };
    ItemService = __decorate([
        core_1.Injectable()
    ], ItemService);
    return ItemService;
}());
exports.ItemService = ItemService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXRlbS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0NBQTJDO0FBSTNDOzs7Ozs7Ozs7R0FTRztBQUVIO0lBREE7UUFFVSxVQUFLLEdBQUcsSUFBSSxLQUFLLENBQ3ZCLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDakQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUMxQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQ2pELEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDN0MsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxFQUNuRCxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQzNDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDakQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUMxQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEVBQzFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsRUFDM0MsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxFQUMvQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQ2pELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsRUFDaEQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUNqRCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEVBQ2hELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsRUFDM0MsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxFQUNyRCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQ25ELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDbkQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUM1QyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEVBQzdDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FDOUMsQ0FBQztJQVNKLENBQUM7SUFQQyw4QkFBUSxHQUFSO1FBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVELDZCQUFPLEdBQVAsVUFBUSxFQUFVO1FBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFkLENBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFoQ1UsV0FBVztRQUR2QixpQkFBVSxFQUFFO09BQ0EsV0FBVyxDQWlDdkI7SUFBRCxrQkFBQztDQUFBLEFBakNELElBaUNDO0FBakNZLGtDQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBJdGVtIH0gZnJvbSAnLi4vbW9kZWxzJztcblxuLyoqXG4gKiBUaGlzIGlzIG9yZ2FuaXplZCBpbiB0aGlzIG1vZHVsZSBqdXN0IGZvciBnb29kIGhvdXNla2VlcGluZ1xuICogSG93ZXZlciBpdCBpcyBwcm92aWRlZCB2aWEgdGhlIENvcmVNb2R1bGUgdG8gZW5zdXJlIGl0J3NcbiAqIGEgc2luZ2xldG9uIHRoZSBlbnRpcmUgYXBwIGNhbiB1c2UuXG4gKiBJZiB5b3VyIG1vZHVsZSBzZXJ2aWNlIGlzICpvbmx5KiB1c2VkIGluIHRoaXMgbW9kdWxlXG4gKiB5b3UgY2FuIGhhdmUgdGhlIHNlcnZpY2UgcHJvdmlkZWQgYnkgdGhpcyBtb2R1bGUuXG4gKiBJbiB0aGlzIGNhc2UgaG93ZXZlciwgd2Ugd2FudCB0aGlzIHNlcnZpY2UgdG8gYmUgYSB0cnVlIHNpbmdsZXRvblxuICogd2hpY2ggY2FuIGJlIGluamVjdGVkIGludG8gYW55IGNvbXBvbmVudC9zZXJ2aWNlIGFueXdoZXJlIGFuZFxuICogaXQgd2lsbCBiZSB0aGUgc2FtZSBpbnN0YW5jZSB0aGVyZWZvcmUgdGhpcyBpcyBwcm92aWRlZCBieSB0aGUgQ29yZU1vZHVsZS5cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEl0ZW1TZXJ2aWNlIHtcbiAgcHJpdmF0ZSBpdGVtcyA9IG5ldyBBcnJheTxJdGVtPihcbiAgICB7IGlkOiAxLCBuYW1lOiAnVGVyIFN0ZWdlbicsIHJvbGU6ICdHb2Fsa2VlcGVyJyB9LFxuICAgIHsgaWQ6IDMsIG5hbWU6ICdQaXF1w6knLCByb2xlOiAnRGVmZW5kZXInIH0sXG4gICAgeyBpZDogNCwgbmFtZTogJ0kuIFJha2l0aWMnLCByb2xlOiAnTWlkZmllbGRlcicgfSxcbiAgICB7IGlkOiA1LCBuYW1lOiAnU2VyZ2lvJywgcm9sZTogJ01pZGZpZWxkZXInIH0sXG4gICAgeyBpZDogNiwgbmFtZTogJ0RlbmlzIFN1w6FyZXonLCByb2xlOiAnTWlkZmllbGRlcicgfSxcbiAgICB7IGlkOiA3LCBuYW1lOiAnQXJkYScsIHJvbGU6ICdNaWRmaWVsZGVyJyB9LFxuICAgIHsgaWQ6IDgsIG5hbWU6ICdBLiBJbmllc3RhJywgcm9sZTogJ01pZGZpZWxkZXInIH0sXG4gICAgeyBpZDogOSwgbmFtZTogJ1N1w6FyZXonLCByb2xlOiAnRm9yd2FyZCcgfSxcbiAgICB7IGlkOiAxMCwgbmFtZTogJ01lc3NpJywgcm9sZTogJ0ZvcndhcmQnIH0sXG4gICAgeyBpZDogMTEsIG5hbWU6ICdOZXltYXInLCByb2xlOiAnRm9yd2FyZCcgfSxcbiAgICB7IGlkOiAxMiwgbmFtZTogJ1JhZmluaGEnLCByb2xlOiAnTWlkZmllbGRlcicgfSxcbiAgICB7IGlkOiAxMywgbmFtZTogJ0NpbGxlc3NlbicsIHJvbGU6ICdHb2Fsa2VlcGVyJyB9LFxuICAgIHsgaWQ6IDE0LCBuYW1lOiAnTWFzY2hlcmFubycsIHJvbGU6ICdEZWZlbmRlcicgfSxcbiAgICB7IGlkOiAxNywgbmFtZTogJ1BhY28gQWxjw6FjZXInLCByb2xlOiAnRm9yd2FyZCcgfSxcbiAgICB7IGlkOiAxOCwgbmFtZTogJ0pvcmRpIEFsYmEnLCByb2xlOiAnRGVmZW5kZXInIH0sXG4gICAgeyBpZDogMTksIG5hbWU6ICdEaWduZScsIHJvbGU6ICdEZWZlbmRlcicgfSxcbiAgICB7IGlkOiAyMCwgbmFtZTogJ1NlcmdpIFJvYmVydG8nLCByb2xlOiAnTWlkZmllbGRlcicgfSxcbiAgICB7IGlkOiAyMSwgbmFtZTogJ0FuZHLDqSBHb21lcycsIHJvbGU6ICdNaWRmaWVsZGVyJyB9LFxuICAgIHsgaWQ6IDIyLCBuYW1lOiAnQWxlaXggVmlkYWwnLCByb2xlOiAnTWlkZmllbGRlcicgfSxcbiAgICB7IGlkOiAyMywgbmFtZTogJ1VtdGl0aScsIHJvbGU6ICdEZWZlbmRlcicgfSxcbiAgICB7IGlkOiAyNCwgbmFtZTogJ01hdGhpZXUnLCByb2xlOiAnRGVmZW5kZXInIH0sXG4gICAgeyBpZDogMjUsIG5hbWU6ICdNYXNpcCcsIHJvbGU6ICdHb2Fsa2VlcGVyJyB9XG4gICk7XG5cbiAgZ2V0SXRlbXMoKTogSXRlbVtdIHtcbiAgICByZXR1cm4gdGhpcy5pdGVtcztcbiAgfVxuXG4gIGdldEl0ZW0oaWQ6IG51bWJlcik6IEl0ZW0ge1xuICAgIHJldHVybiB0aGlzLml0ZW1zLmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgPT09IGlkKVswXTtcbiAgfVxufVxuIl19